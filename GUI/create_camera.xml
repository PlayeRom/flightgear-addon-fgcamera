<?xml version="1.0"?>

<PropertyList>
	<name>create-new-camera</name>
	<layout>vbox</layout>
	<width>330</width>
	<height>130</height>

	<group>
		<layout>hbox</layout>

		<empty><stretch>1</stretch></empty>

		<text>
			<label>Create new camera</label>
		</text>

		<empty><stretch>1</stretch></empty>

		<button>
			<legend> </legend>
			<key>Esc</key>
			<pref-width>16</pref-width>
			<pref-height>16</pref-height>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>

	</group>

	<hrule/>

	<group>
		<layout>hbox</layout>

		<text>
			<label>Camera type:</label>
			<valign>fill</valign>
			<halign>left</halign>
		</text>

	<combo>
		<name>camera-types</name>
		<halign>fill</halign>
		<stretch>1</stretch>
		<property>/sim/fgcamera/dialogs/create-camera/camera-type</property>
		<binding>
			<command>dialog-apply</command>
			<object-name>camera-types</object-name>
		</binding>
		<binding>
			<command>nasal</command>
			<script>select_type()</script>
		</binding>
		<value>cockpit</value>
		<value>aircraft (look at)</value>
		<value>aircraft (look from)</value>
		<value>world (look at) n/a</value>
		<value>world (look from)</value>
		<value>AI object (look from)</value>
	</combo>

	</group>

	<hrule/>

	<group>
		<layout>hbox</layout>
		<empty><stretch>1</stretch></empty>
		<button>
			<legend>Create</legend>
			<pref-width>90</pref-width>
			<pref-height>30</pref-height>
			<binding>
				<command>nasal</command>
				<script>create_camera()</script>
			</binding>
		</button>

		<button>
			<legend>Cancel</legend>
			<pref-width>90</pref-width>
			<pref-height>30</pref-height>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>
		<empty><stretch>1</stretch></empty>
	</group>
	
	<nasal>
		<open> <![CDATA[
			if (getprop("/sim/fgcamera/dialogs/create-camera/camera-type") == nil)
				setprop("/sim/fgcamera/dialogs/create-camera/camera-type", "cockpit");
			var cameraN   = props.Node.new();
			var path      = getprop("/sim/fg-root") ~ "/Nasal/fgcamera/default-cameras.xml";
			var type      = nil;
			props.copy(io.read_properties(path), cameraN);
			#==================================================
			#	Functions
			#==================================================
			var set_tower = func (twr) {
				var list = [
					"latitude-deg",
					"longitude-deg",
					"altitude-ft",
					"heading-deg",
					"pitch-deg",
					"roll-deg",
				];
				foreach (var a; list)
					twr[a] = getprop("/sim/tower/" ~ a);
				return twr;
			}
			#==================================================
			#	Select camera type
			#==================================================
			var select_type = func {
				var selected = getprop("/sim/fgcamera/dialogs/create-camera/camera-type") or "cockpit";
				var types = [
					["cockpit"               , "FGCamera1"],
					["aircraft (look at)"    , "FGCamera2"],
					["aircraft (look from)"  , "FGCamera3"],
					["world (look at)"       , "FGCamera4"],
					["world (look from)"     , "FGCamera5"],
					["AI object (look from)" , "FGCamera6"],
				];
				var i = 0;
				foreach(var a; types) { #revise
					if (selected == a[0]) {
						type = i;
						break;
					}
					i += 1;
				}
				#print("selected:" ~ type);
			}
			#==================================================
			#	Create new camera
			#==================================================
			var ___create_camera = func {
				var camera   = {};
				camera       = cameraN.getChild("camera").getValues();
				camera.name  = "new camera";
				camera.type  = type;
				if (type == "FGCamera5")
					camera.tower = set_tower(camera.tower);
					#camera.offsets = world_lookfrom_offsets();
				append(fgcamera.cameras, camera);
				setprop("/sim/fgcamera/current-camera/camera-id", size(fgcamera.cameras) - 1);
			}
			var create_camera = func {
				fgcamera.getCameraList().addCamera("new camera", type).select();
			}
			#==================================================
			select_type();
		]]> </open>
	</nasal>
</PropertyList>
