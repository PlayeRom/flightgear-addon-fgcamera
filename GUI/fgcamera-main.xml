<?xml version="1.0"?>

<PropertyList>
	<name>fgcamera-main</name>
	<layout>vbox</layout>
	<color>
		<alpha>0.5</alpha>
	</color>

	<group>
		<layout>hbox</layout>

		<empty><stretch>1</stretch></empty>

		<text>
			<label>FGCamera v1.3</label>
		</text>

		<empty><stretch>1</stretch></empty>

		<button>
			<legend> </legend>
			<key>Esc</key>
			<pref-width>16</pref-width>
			<pref-height>16</pref-height>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>

	</group>

	<hrule/>

	<group>
		<layout>hbox</layout>
		<group>
			<layout>hbox</layout>
			<group>
				<layout>vbox</layout>
				<list>
					<name>camera_list</name>
					<color>
						<alpha>0.7</alpha>
					</color>
					<pref-width>250</pref-width>
					<halign>left</halign>
					<valign>fill</valign>
					<stretch>true</stretch>
					<padding>6</padding>
					<property>/sim/fgcamera/current-camera/name</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>select_camera()</script>
					</binding>
					<value>...</value>
				</list>
				<!--list>
					<name>cmd_list</name>
					<color>
						<alpha>0.7</alpha>
					</color>
					<pref-width>250</pref-width>
					<halign>left</halign>
					<stretch>false</stretch>
					<padding>6</padding>
					<property>/sim/fgcamera/cmd</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<value>Create cockpit camera</value>
					<value>Create aircraft camera</value>
					<value>Create world camera</value>
					<value></value>
					<value>Create aircraft camera</value>
				</list-->
				<group>
					<layout>hbox</layout>
					<button>
						<legend>Add:</legend>
						<height>30</height>
						<halign>left</halign>
						<binding>
							<command>nasal</command>
							<script>addCamera()</script>
						</binding>
					</button>
					<combo>
						<name>camera-types</name>
						<halign>fill</halign>
						<stretch>1</stretch>
						<property>/sim/fgcamera/dialogs/main/camera-type</property>
						<binding>
							<command>dialog-apply</command>
							<object-name>camera-types</object-name>
						</binding>
						<value>cockpit camera</value>
						<value>aircraft camera</value>
						<value>world camera</value>
					</combo>
				</group>
				<group>
					<layout>hbox</layout>
					<button>
						<legend>Copy</legend>
						<height>30</height>
						<halign>fill</halign>
						<binding>
							<command>nasal</command>
							<script>L.CurrentCamera().copy()</script>
						</binding>
					</button>
					<layout>hbox</layout>
					<button>
						<legend>Delete</legend>
						<!--stretch>1</stretch-->
						<height>30</height>
						<halign>fill</halign>
						<binding>
							<command>nasal</command>
							<script>L.CurrentCamera().delete()</script>
						</binding>
					</button>
				</group>
			</group>
			<group>
				<layout>vbox</layout>
				<empty><stretch>1</stretch></empty>
				<button>
					<legend>U</legend>
					<pref-width>30</pref-width>
					<height>30</height>
					<binding>
						<command>nasal</command>
						<script>reorder_cameras(-1)</script>
					</binding>
				</button>
				<button>
					<legend>D</legend>
					<pref-width>30</pref-width>
					<height>30</height>
					<halign>left</halign>
					<binding>
						<command>nasal</command>
						<script>reorder_cameras(1)</script>
					</binding>
				</button>
				<empty><stretch>1</stretch></empty>
			</group>
		</group>

		<vrule><stretch>true</stretch></vrule>

		<group>
			<layout>vbox</layout>
			<group>
				<layout>hbox</layout>
				<text>
					<label>Camera name</label>
					<halign>left</halign>
				</text>
				<input>
					<halign>right</halign>
					<property>/sim/fgcamera/current-camera/camera-name</property>
					<live>1</live>
					<pref-width>200</pref-width>
					<height>25</height>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>rename_camera()</script>
					</binding>
				</input>
			</group>
			<group>
				<layout>hbox</layout>
				<text>
					<label>Category</label>
					<halign>left</halign>
				</text>
				<input>
					<halign>right</halign>
					<pref-width>200</pref-width>
					<height>25</height>
					<property>/sim/fgcamera/current-camera/category</property>
					<live>1</live>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_category()</script>
					</binding>
				</input>
			</group>
			<group>
				<layout>hbox</layout>
				<text>
					<label>View adjustment</label>
				</text>
				<hrule><stretch>true</stretch></hrule>
			</group>
			<group>
				<layout>hbox</layout>
				<text>
					<label>FOV</label>
					<halign>left</halign>
				</text>
				<input>
					<halign>right</halign>
					<pref-width>100</pref-width>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/field-of-view</property>
					<live>1</live>
					<height>25</height>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("field-of-view")</script>
					</binding>
				</input>
			</group>
			<group>
				<layout>hbox</layout>
				<text>
					<label>Linear velocity [m/s]</label>
					<halign>left</halign>
				</text>
				<input>
					<halign>right</halign>
					<pref-width>100</pref-width>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/adjustment-linear-velocity</property>
					<live>1</live>
					<height>25</height>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("adjustment-linear-velocity")</script>
					</binding>
				</input>
			</group>

			<group>
				<layout>hbox</layout>
				<text>
					<label>Angular velocity [deg/s]</label>
					<halign>left</halign>
				</text>
				<input>
					<halign>right</halign>
					<pref-width>100</pref-width>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/adjustment-angular-velocity</property>
					<live>1</live>
					<height>25</height>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("adjustment-angular-velocity")</script>
					</binding>
				</input>
			</group>

			<group>
				<layout>hbox</layout>
				<text>
					<label>LP filter</label>
					<halign>left</halign>
				</text>
				<input>
					<halign>right</halign>
					<pref-width>100</pref-width>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/adjustment-filter</property>
					<live>1</live>
					<height>25</height>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("adjustment-filter")</script>
					</binding>
				</input>
			</group>

				<button>
					<legend>Store current position</legend>
					<height>30</height>
					<binding>
						<command>nasal</command>
						<script>L.CurrentCamera().storeOffsets()</script>
					</binding>
				</button>

			<group>
				<layout>hbox</layout>
				<text>
					<label>View movement</label>
				</text>
				<hrule><stretch>true</stretch></hrule>
			</group>

			<group>
				<layout>hbox</layout>
				<checkbox>
					<halign>left</halign>
					<width>12</width>
					<height>12</height>
					<label>Linear interpolation</label>
					<live>1</live>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/movement-linterp</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("movement-linterp")</script>
					</binding>
				</checkbox>
			</group>

			<group>
				<layout>hbox</layout>
				<checkbox>
					<halign>left</halign>
					<width>12</width>
					<height>12</height>
					<label>Chained</label>
					<live>1</live>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/movement-chained</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("movement-chained")</script>
					</binding>
				</checkbox>
			</group>

			<group>
				<layout>hbox</layout>
				<checkbox>
					<halign>left</halign>
					<width>12</width>
					<height>12</height>
					<label>Popup message</label>
					<live>1</live>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/movement-popup-tip</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("movement-popup-tip")</script>
					</binding>
				</checkbox>
			</group>

			<group>
				<layout>hbox</layout>
				<text>
					<label>Transition time [s]</label>
					<halign>left</halign>
				</text>
				<input>
					<halign>right</halign>
					<pref-width>100</pref-width>
					<height>25</height>
					<live>1</live>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/movement-transition-time</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("movement-transition-time")</script>
					</binding>
				</input>
			</group>

			<group>
				<layout>hbox</layout>
				<text>
					<label>LP filter</label>
					<halign>left</halign>
				</text>
				<input>
					<halign>right</halign>
					<pref-width>100</pref-width>
					<height>25</height>
					<live>1</live>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/movement-filter</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("movement-filter")</script>
					</binding>
				</input>
			</group>

			<group>
				<layout>hbox</layout>
				<text>
					<label>Mouse look</label>
				</text>
				<hrule><stretch>true</stretch></hrule>
			</group>
			<group>
				<layout>hbox</layout>
				<text>
					<label>Sensitivity</label>
					<halign>left</halign>
				</text>
				<input>
					<halign>right</halign>
					<pref-width>100</pref-width>
					<height>25</height>
					<live>1</live>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/mlook-sensitivity</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("mlook-sensitivity")</script>
					</binding>
				</input>
			</group>

			<group>
				<layout>hbox</layout>
				<text>
					<label>LP filter</label>
					<halign>left</halign>
				</text>
				<input>
					<halign>right</halign>
					<pref-width>100</pref-width>
					<height>25</height>
					<live>1</live>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/mlook-filter</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>set_value("mlook-filter")</script>
					</binding>
				</input>
			</group>

			<empty><stretch>1</stretch></empty>
		</group>
		<vrule/>

		<group>
			<layout>vbox</layout>
			<group>
				<layout>hbox</layout>
				<checkbox>
					<halign>left</halign>
					<width>12</width>
					<height>12</height>
					<label>Show dialog:</label>
					<live>1</live>
					<property>/sim/fgcamera/current-camera/config/dialog-show</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>
							L.CurrentCamera().dialog(getprop("/sim/fgcamera/current-camera/config/dialog-show"));
						</script>
					</binding>
				</checkbox>
				<input>
					<halign>right</halign>
					<pref-width>200</pref-width>
					<height>25</height>
					<live>1</live>
					<enable>
						<property>/sim/fgcamera/current-camera/config/dialog-show</property>
					</enable>
					<property>/sim/fgcamera/current-camera/config/dialog-name</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>
							L.CurrentCamera().dialog( ,getprop("/sim/fgcamera/current-camera/config/dialog-name"));
						</script>
					</binding>
				</input>
			</group>
			<group>
				<layout>hbox</layout>
				<checkbox>
					<halign>left</halign>
					<width>12</width>
					<height>12</height>
					<label>Show 2d panel:</label>
					<live>1</live>
					<property>/sim/fgcamera/current-camera/config/panel-show</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>
							L.CurrentCamera().panel(getprop("/sim/fgcamera/current-camera/config/panel-show"));
						</script>
					</binding>
				</checkbox>
                <combo>
						<name>camera-types</name>
						<halign>right</halign>
                        <height>25</height>
                        <pref-width>200</pref-width>
						<stretch>1</stretch>
                        <live>1</live>
                        <enable>
                            <property>/sim/fgcamera/current-camera/config/panel-show</property>
                        </enable>
						<property>/sim/fgcamera/current-camera/config/panel-name</property>
						<binding>
							<command>dialog-apply</command>
							<object-name>camera-types</object-name>
						</binding>
                        <binding>
                            <command>nasal</command>
                            <script>
                                L.CurrentCamera().panel( ,getprop("/sim/fgcamera/current-camera/config/panel-name"));
                            </script>
                        </binding>
                        <value></value>
						<value>vfr panel 1</value>
						<value>vfr panel 2</value>
                </combo>
			</group>
			<group>
				<layout>hbox</layout>
				<checkbox>
					<halign>left</halign>
					<width>12</width>
					<height>12</height>
					<label>Select FGCursor group</label>
					<live>1</live>
					<property>/sim/fgcamera/current-camera/config/fgcursor-show</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>
							L.CurrentCamera().fgcursor(getprop("/sim/fgcamera/current-camera/config/fgcursor-show"));
						</script>
					</binding>
				</checkbox>
				<input>
					<halign>right</halign>
					<pref-width>200</pref-width>
					<height>25</height>
					<live>1</live>
					<enable>
						<property>/sim/fgcamera/current-camera/config/fgcursor-show</property>
					</enable>
					<property>/sim/fgcamera/current-camera/config/fgcursor-group</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>
							L.CurrentCamera().fgcursor( ,getprop("/sim/fgcamera/current-camera/config/fgcursor-group"));
						</script>
					</binding>
				</input>
			</group>

			<checkbox>
				<halign>left</halign>
				<width>12</width>
				<height>12</height>
				<label>"Look-at"</label>
				<live>1</live>
				<property>/sim/fgcamera/current-camera/config/look-at</property>
				<binding>
					<command>dialog-apply</command>
				</binding>
				<binding>
					<command>nasal</command>
					<script>
						L.CurrentCamera().lookat(getprop("/sim/fgcamera/current-camera/config/look-at"));
					</script>
				</binding>
			</checkbox>
			<group>
				<layout>hbox</layout>
				<text>
					<label>HeadTracker</label>
				</text>
				<hrule><stretch>true</stretch></hrule>
			</group>
			<group>
				<layout>hbox</layout>
				<checkbox>
					<live>1</live>
					<halign>left</halign>
					<width>12</width>
					<height>12</height>
					<label>Enable</label>
					<property>/sim/fgcamera/current-camera/config/head-tracker/enabled</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>
							L.CurrentCamera().settings("head tracker").enabled(getprop("/sim/fgcamera/current-camera/config/head-tracker/enabled"));
						</script>
					</binding>
				</checkbox>
			</group>

<!--
			<group>
				<layout>hbox</layout>
				<checkbox>
					<halign>left</halign>
					<width>12</width>
					<height>12</height>
					<label>Movement limits:</label>
					<binding>
						<command>dialog-apply</command>
					</binding>
				</checkbox>
			</group>

			<button>
				<legend>set +Y</legend>
				<height>30</height>
				<binding>
				</binding>
			</button>
			<group>
				<layout>hbox</layout>
				<button>
					<legend>set -X</legend>
					<halign>right</halign>
					<height>30</height>
					<binding>
					</binding>
				</button>
				<button>
					<legend>set -Y</legend>
					<height>30</height>
					<binding>
					</binding>
				</button>
				<button>
					<legend>set +X</legend>
					<halign>left</halign>
					<height>30</height>
					<binding>
					</binding>
				</button>
			</group>
-->
			<group>
				<layout>hbox</layout>
				<text>
					<label>LP filter</label>
					<halign>left</halign>
				</text>
				<input>
					<live>1</live>
					<halign>right</halign>
					<pref-width>100</pref-width>
					<height>25</height>
					<property>/sim/fgcamera/current-camera/config/head-tracker/filter-time</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>
							L.CurrentCamera().settings("head tracker").filter(getprop("/sim/fgcamera/current-camera/config/head-tracker/filter-time"));
						</script>
					</binding>
				</input>
			</group>
			<group>
				<layout>hbox</layout>
				<text>
					<label>Effects</label>
				</text>
				<hrule><stretch>true</stretch></hrule>
			</group>
			<group>
				<layout>hbox</layout>
				<checkbox>
					<width>12</width>
					<height>12</height>
					<halign>left</halign>
					<label>Dynamic head movement</label>
					<enable>
						<property></property>
					</enable>
					<binding>
						<command>dialog-apply</command>
					</binding>
				</checkbox>
				<button>
					<legend>CFG...</legend>
					<halign>right</halign>
					<height>30</height>
					<binding>
						<command>dialog-show</command>
						<dialog-name>DHM-settings</dialog-name>
					</binding>
					<binding>
						<command>dialog-close</command>
						<dialog-name>fgcamera-main</dialog-name>
					</binding>
				</button>
			</group>
			<group>
				<layout>hbox</layout>
				<checkbox>
					<width>12</width>
					<height>12</height>
					<halign>left</halign>
					<label>Random camera movement</label>
					<enable>
						<property></property>
					</enable>
					<binding>
						<command>dialog-apply</command>
					</binding>
				</checkbox>
				<button>
					<legend>CFG...</legend>
					<halign>right</halign>
					<!--enable>
						<property></property>
					</enable-->
					<height>30</height>
			<binding>
				<command>dialog-show</command>
				<dialog-name>RND-mixer</dialog-name>
			</binding>
			<binding>
				<command>dialog-close</command>
				<dialog-name>fgcamera-main</dialog-name>
			</binding>
				</button>
			</group>
			<group>
				<layout>hbox</layout>
				<checkbox>
					<live>1</live>
					<width>12</width>
					<height>12</height>
					<halign>left</halign>
					<label>Power-plant vibration</label>
					<property>/sim/fgcamera/dialogs/fgcamera-main/settings/enable-power-plant-vibration</property>
					<binding>
						<command>dialog-apply</command>
					</binding>
					<binding>
						<command>nasal</command>
						<script>
							L.CurrentCamera().effect("Power-plant vibration")
								.enable( getprop("/sim/fgcamera/dialogs/fgcamera-main/settings/enable-power-plant-vibration") );
						</script>
					</binding>
				</checkbox>
				<button>
					<legend>CFG...</legend>
					<halign>right</halign>
					<height>30</height>
					<enable>
						<property>/sim/fgcamera/dialogs/fgcamera-main/settings/enable-power-plant-vibration</property>
					</enable>
					<binding>
						<command>dialog-show</command>
						<dialog-name>power-plant-vibration</dialog-name>
					</binding>
					<binding>
						<command>dialog-close</command>
						<dialog-name>fgcamera-main</dialog-name>
					</binding>
				</button>
			</group>
			<empty><stretch>1</stretch></empty>
		</group>

	</group>

	<hrule/>

	<group>
		<layout>hbox</layout>

		<button>
			<legend>Options...</legend>
			<pref-height>30</pref-height>
			<binding>
				<command>dialog-show</command>
				<dialog-name>fgcamera-options</dialog-name>
			</binding>
		</button>

		<empty><stretch>1</stretch></empty>

		<button>
			<legend>Save</legend>
			<pref-height>30</pref-height>
			<binding>
				<command>nasal</command>
				<script>L.saveToXML()</script>
			</binding>
		</button>

		<button>
			<legend>Close</legend>
			<pref-height>30</pref-height>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>

		<empty><stretch>1</stretch></empty>
	</group>

	<nasal>
		<open> <![CDATA[
			var list        = cmdarg().getNode("group[1]/group/group/list");
			var dlg_path    = "/sim/fgcamera/dialogs/fgcamera-main";
			var path        = "/sim/fgcamera/dialogs/fgcamera-main/settings/";
			var L           = fgcamera.API("1.0-devel").CameraList();
			var names       = [];
			var listener1   = setlistener("/sim/fgcamera/current-camera/camera-index", func{update_list()}); #revise
			var listener2   = setlistener("/sim/fgcamera/signals/update",              func{update_list()}); #revise

			var calc_data = func {
				var c  = L.CurrentCamera();
				var s  = c.settings("view adjustment");
				var s1 = c.settings("view movement");
				var s2 = c.settings("mouse look");
				var s3 = c.effect("Power-plant vibration");
				return [
					[ "show-panel"                  , func (v = nil) 0                    ],
					[ "show-dialog"                 , func (v = nil) 0                    ],
					[ "dialog-name"                 , func (v = nil) 0                    ],
					[ "ai-object-name"              , func (v = nil) 0                    ],
					[ "enable-RND"                  , func (v = nil) 0                    ],
					[ "enable-DHM"                  , func (v = nil) 0                    ],
					[ "field-of-view"               , func (v = nil) s.FOV(v)             ],
					[ "movement-transition-time"    , func (v = nil) s1.time(v)           ],
					[ "movement-linterp"            , func (v = nil) s1.linear(v)         ],
					[ "movement-filter"             , func (v = nil) s1.filter(v)         ],
					[ "movement-popup-tip"          , func (v = nil) s1.popupTip(v)       ],
					[ "movement-chained"            , func (v = nil) s1.chained(v)        ],
					[ "adjustment-linear-velocity"  , func (v = nil) s.LinearVelocity(v)  ],
					[ "adjustment-angular-velocity" , func (v = nil) s.AngularVelocity(v) ],
					[ "adjustment-filter"           , func (v = nil) s.filter(v)          ],
					[ "mlook-sensitivity"           , func (v = nil) s2.sensitivity(v)    ],
					[ "mlook-filter"                , func (v = nil) s2.filter(v)         ],
					[ "enable-power-plant-vibration", func (v = nil) s3.enable(v)         ],
				];
			}
			#--------------------------------------------------
			var update_values = func {
				foreach (var a; var data = calc_data()) { #?
					setprop(path ~ a[0], a[1]() );
					#dialog_update(a[0]);
				}
			}
			#--------------------------------------------------
			var set_value = func(fld) {
				foreach ( var a; var data = calc_data() )
					if ( a[0] == fld )
						a[1]( getprop(path ~ fld) );

				return nil
			}
			#--------------------------------------------------
			var dialog_update = func () {
				forindex (var i; arg) {
					var hash = {
						"object-name" : arg[i],
						"dialog-name" : "fgcamera-main"
					};
					fgcommand( "dialog-update", props.Node.new(hash) );
				}
			}
			#--------------------------------------------------
			var update_list = func {
				list.removeChildren("value");

				var n = L.CameraCount() - 1;
				var current_id = L.CurrentCamera().id();

				for (var i = 1; i <= n; i += 1){
					var camera   = L.CameraByID(i);
					var name     = camera.name();
					var category = camera.category();

					if (i == current_id) {
						setprop("/sim/fgcamera/current-camera/camera-name", name);
						setprop("/sim/fgcamera/current-camera/category", category);
						name = "[" ~ name ~ "]";
					}

					if ( i > 0 )
						list.addChild("value").setValue(i ~ ". " ~ name  ~ "[" ~ category ~ "]");
				}
				dialog_update("camera_list");
				update_values();
			}
			#==================================================
			#	Select camera
			#==================================================
			var select_camera = func {
				var name = getprop("/sim/fgcamera/current-camera/name");
				var i = 0;
				foreach (var a; list.getChildren("value")) {
					if (a.getValue() == name) {
						L.CameraByID(i + 1).select();
						return;
					}
					i += 1;
				}
				L.camera(0).select();
			}
			#==================================================
			#	Create camera
			#==================================================
			setprop("/sim/fgcamera/dialogs/main/camera-type", "cockpit camera");
			var addCamera = func {
				var type = nil;
				var type_str = getprop("/sim/fgcamera/dialogs/main/camera-type");
				if (type_str == "aircraft camera")
					type = 1;
				elsif (type_str == "world camera")
					type = 2;
				else type = 0;
				L.newCamera( , type).select();
			}
			#==================================================
			#	Copy camera
			#==================================================
			var copy_camera = func {
				L.CurrentCamera().copy();
			}
			#==================================================
			#	Up / Down
			#==================================================
			var reorder_cameras = func (dir) {
				var c = L.CurrentCamera();
				c.id(c.id() + dir);
			}
			#==================================================
			#	Rename camera
			#==================================================
			var rename_camera = func {
				L.CurrentCamera()
					.name( getprop("/sim/fgcamera/current-camera/camera-name") );
			}
			#==================================================
			#	Set category
			#==================================================
			var set_category = func {
				L.CurrentCamera()
					.category( getprop("/sim/fgcamera/current-camera/category") );
			}

			update_list();
			setprop("/sim/fgcamera/gui-opened", 1);
		]]> </open>

		<close>
			setprop("/sim/fgcamera/gui-opened", 0);
			removelistener(listener1);
			removelistener(listener2);
		</close>
	</nasal>

</PropertyList>
