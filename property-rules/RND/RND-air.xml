<?xml version="1.0"?>

<PropertyList>

	<params include="params-air.xml"/>

<!--
===================================================================================================
	Sine generators
		
===================================================================================================
-->

<!-- Generator[0] -->
	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[0]/sine/level"/>
		</gain>
		<input>
			<condition>
				<property alias="/params/gen[0]/sine/enable"/>
			</condition>
			<expression>
				<sin>
					<product>
						<value>2</value>
						<value>3.1415926</value>
						<property alias="/params/gen[0]/sine/f"/>
						<property>/sim/time/elapsed-sec</property>
					</product>
				</sin>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/sine/output"/>
	</filter>

<!-- Generator[1] -->
	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[1]/sine/level"/>
		</gain>
		<input>
			<condition>
				<property alias="/params/gen[1]/sine/enable"/>
			</condition>
			<expression>
				<sin>
					<product>
						<value>2</value>
						<value>3.1415926</value>
						<property alias="/params/gen[1]/sine/f"/>
						<property>/sim/time/elapsed-sec</property>
					</product>
				</sin>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/sine/output"/>
	</filter>

<!-- Generator[2] -->
	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[2]/sine/level"/>
		</gain>
		<input>
			<condition>
				<property alias="/params/gen[2]/sine/enable"/>
			</condition>
			<expression>
				<sin>
					<product>
						<value>2</value>
						<value>3.1415926</value>
						<property alias="/params/gen[2]/sine/f"/>
						<property>/sim/time/elapsed-sec</property>
					</product>
				</sin>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[2]/sine/output"/>
	</filter>

<!--
===================================================================================================
	Resonance generators
		
===================================================================================================
-->
<!-- Generator 0 -->
	<filter>
		<type>gain</type>
		<enable>
			<property alias="/params/gen[0]/resonance/enable"/>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[0]/resonance/_t"/>
					<property alias="/params/gen[0]/resonance/_T"/>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[0]/resonance/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/resonance/_t"/>
	</filter>

	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[0]/resonance/intensity"/>
		</gain>
		<enable>
			<condition>
				<property alias="/params/gen[0]/resonance/enable"/>
				<not>
					<property alias="/params/gen[0]/resonance/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[0]/resonance/_T"/>
	</filter>

	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[0]/resonance/enable"/>
				<not>
					<property alias="/params/gen[0]/resonance/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/> <!-- revise: same random value as _T -->
		</input>
		<output alias="/params/gen[0]/resonance/_A"/>
	</filter>

	<filter>
		<type>exponential</type>
		<enable>
			<property alias="/params/gen[0]/resonance/enable"/>
		</enable>
		<filter-time>
			<property alias="/params/gen[0]/resonance/attack"/>
		</filter-time>
		<input alias="/params/gen[0]/resonance/_A"/>
		<output alias="/params/gen[0]/resonance/_attack"/>
	</filter>

	<filter>
		<type>exponential</type>
		<enable>
			<property alias="/params/gen[0]/resonance/enable"/>
		</enable>
		<filter-time>
			<property alias="/params/gen[0]/resonance/release"/>
		</filter-time>
		<input alias="/params/gen[0]/resonance/_A"/>
		<output alias="/params/gen[0]/resonance/_release"/>
	</filter>

	<filter>
		<type>gain</type>
		<!--gain>
			<property alias="/params/gen[0]/resonance/level"/>
		</gain-->
		<input>
			<condition>
				<property alias="/params/gen[0]/resonance/enable"/>
			</condition>
			<expression>
				<product>
					<difference>
						<property alias="/params/gen[0]/resonance/_attack"/>
						<property alias="/params/gen[0]/resonance/_release"/>
					</difference>
					<sin>
						<product>
							<value>2</value>
							<value>3.1415926</value>
							<property alias="/params/gen[0]/resonance/f"/>
							<property>/sim/time/elapsed-sec</property>
						</product>
					</sin>
				</product>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/resonance/output"/>
	</filter>

<!-- Generator 1 -->
	<filter>
		<type>gain</type>
		<enable>
			<property alias="/params/gen[1]/resonance/enable"/>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[1]/resonance/_t"/>
					<property alias="/params/gen[1]/resonance/_T"/>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[1]/resonance/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/resonance/_t"/>
	</filter>

	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[1]/resonance/intensity"/>
		</gain>
		<enable>
			<condition>
				<property alias="/params/gen[1]/resonance/enable"/>
				<not>
					<property alias="/params/gen[1]/resonance/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[1]/resonance/_T"/>
	</filter>

	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[1]/resonance/enable"/>
				<not>
					<property alias="/params/gen[1]/resonance/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/> <!-- revise: same random value as _T -->
		</input>
		<output alias="/params/gen[1]/resonance/_A"/>
	</filter>

	<filter>
		<type>exponential</type>
		<enable>
			<property alias="/params/gen[1]/resonance/enable"/>
		</enable>
		<filter-time>
			<property alias="/params/gen[1]/resonance/attack"/>
		</filter-time>
		<input alias="/params/gen[1]/resonance/_A"/>
		<output alias="/params/gen[1]/resonance/_attack"/>
	</filter>

	<filter>
		<type>exponential</type>
		<enable>
			<property alias="/params/gen[1]/resonance/enable"/>
		</enable>
		<filter-time>
			<property alias="/params/gen[1]/resonance/release"/>
		</filter-time>
		<input alias="/params/gen[1]/resonance/_A"/>
		<output alias="/params/gen[1]/resonance/_release"/>
	</filter>

	<filter>
		<type>gain</type>
		<!--gain>
			<property alias="/params/gen[1]/resonance/level"/>
		</gain-->
		<input>
			<condition>
				<property alias="/params/gen[1]/resonance/enable"/>
			</condition>
			<expression>
				<product>
					<difference>
						<property alias="/params/gen[1]/resonance/_attack"/>
						<property alias="/params/gen[1]/resonance/_release"/>
					</difference>
					<sin>
						<product>
							<value>2</value>
							<value>3.1415926</value>
							<property alias="/params/gen[1]/resonance/f"/>
							<property>/sim/time/elapsed-sec</property>
						</product>
					</sin>
				</product>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/resonance/output"/>
	</filter>

<!-- Generator 2 -->
	<filter>
		<type>gain</type>
		<enable>
			<property alias="/params/gen[2]/resonance/enable"/>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[2]/resonance/_t"/>
					<property alias="/params/gen[2]/resonance/_T"/>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[2]/resonance/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[2]/resonance/_t"/>
	</filter>

	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[2]/resonance/intensity"/>
		</gain>
		<enable>
			<condition>
				<property alias="/params/gen[2]/resonance/enable"/>
				<not>
					<property alias="/params/gen[2]/resonance/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[2]/resonance/_T"/>
	</filter>

	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[2]/resonance/enable"/>
				<not>
					<property alias="/params/gen[2]/resonance/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/> <!-- revise: same random value as _T -->
		</input>
		<output alias="/params/gen[2]/resonance/_A"/>
	</filter>

	<filter>
		<type>exponential</type>
		<enable>
			<property alias="/params/gen[2]/resonance/enable"/>
		</enable>
		<filter-time>
			<property alias="/params/gen[2]/resonance/attack"/>
		</filter-time>
		<input alias="/params/gen[2]/resonance/_A"/>
		<output alias="/params/gen[2]/resonance/_attack"/>
	</filter>

	<filter>
		<type>exponential</type>
		<enable>
			<property alias="/params/gen[2]/resonance/enable"/>
		</enable>
		<filter-time>
			<property alias="/params/gen[2]/resonance/release"/>
		</filter-time>
		<input alias="/params/gen[2]/resonance/_A"/>
		<output alias="/params/gen[2]/resonance/_release"/>
	</filter>

	<filter>
		<type>gain</type>
		<!--gain>
			<property alias="/params/gen[2]/resonance/level"/>
		</gain-->
		<input>
			<condition>
				<property alias="/params/gen[2]/resonance/enable"/>
			</condition>
			<expression>
				<product>
					<difference>
						<property alias="/params/gen[2]/resonance/_attack"/>
						<property alias="/params/gen[2]/resonance/_release"/>
					</difference>
					<sin>
						<product>
							<value>2</value>
							<value>3.1415926</value>
							<property alias="/params/gen[2]/resonance/f"/>
							<property>/sim/time/elapsed-sec</property>
						</product>
					</sin>
				</product>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[2]/resonance/output"/>
	</filter>



<!--
===================================================================================================
	Noise generators
		
===================================================================================================
-->

<!--
	if (t <= 1/f) t += dt;
	else t = 0;
-->
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[0]/noise/enable"/>
			</condition>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[0]/noise/_t"/>
					<expression>
						<pow>
							<property alias="/params/gen[0]/noise/f"/>
							<value>-1</value>
						</pow>
					</expression>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[0]/noise/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/noise/_t"/>
	</filter>

<!--
	if (t == 0) raw_output = rand();
-->
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[0]/noise/enable"/>
				<not>
					<property alias="/params/gen[0]/noise/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[0]/noise/_raw-amplitude"/>
	</filter>

	<!--filter>
		<type>exponential</type>
		<gain>
			<property alias="/params/gen[0]/noise/enable"/>
		</gain>
		<filter-time>
			<expression>
				<pow>
					<product>
						<value>2</value>
						<value>3.14159</value>
						<property alias="/params/gen[0]/noise/f"/>
					</product>
					<value>-1.0</value>
				</pow>
			</expression>
		</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[0]/noise/enable"/>
			</condition>
			<property alias="/params/gen[0]/noise/_raw-amplitude"/>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/noise/output"/>
	</filter-->


<!--
	output = raw_output_lowpass.filter(0.2);
-->
	<filter>
		<enable>
			<condition>
				<property alias="/params/gen[0]/noise/enable"/>
			</condition>
		</enable>
		<type>exponential</type>
		<filter-time>
			<expression>
				<pow>
					<product>
						<value>2</value>
						<value>3.14159</value>
						<property alias="/params/gen[0]/noise/f"/>
					</product>
					<value>-1.0</value>
				</pow>
			</expression>
		</filter-time>
		<input alias="/params/gen[0]/noise/_raw-amplitude"/>
		<output alias="/params/gen[0]/noise/_amplitude"/>
	</filter>

	<filter>
		<type>gain</type>
		<!--gain>
			<property alias="/params/gen[0]/noise/level"/>
		</gain-->
		<input>
			<condition>
				<property alias="/params/gen[0]/noise/enable"/>
			</condition>
			<expression>
				<product>
					<property alias="/params/gen[0]/noise/_amplitude"/>
					<sin>
						<product>
							<value>2</value>
							<value>3.1415926</value>
							<property alias="/params/gen[0]/noise/f"/>
							<property>/sim/time/elapsed-sec</property>
						</product>
					</sin>
				</product>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/noise/output"/>
	</filter>
<!-- Noise generator1 -->

<!--
	if (t <= 1/f) t += dt;
	else t = 0;
-->
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[1]/noise/enable"/>
			</condition>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[1]/noise/_t"/>
					<expression>
						<pow>
							<property alias="/params/gen[1]/noise/f"/>
							<value>-1</value>
						</pow>
					</expression>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[1]/noise/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/noise/_t"/>
	</filter>

<!--
	if (t == 0) raw_output = rand();
-->
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[1]/noise/enable"/>
				<not>
					<property alias="/params/gen[1]/noise/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[1]/noise/_raw-amplitude"/>
	</filter>

	<!--filter>
		<type>exponential</type>
		<gain>
			<property alias="/params/gen[1]/noise/enable"/>
		</gain>
		<filter-time>
			<expression>
				<pow>
					<product>
						<value>2</value>
						<value>3.14159</value>
						<property alias="/params/gen[1]/noise/f"/>
					</product>
					<value>-1.0</value>
				</pow>
			</expression>
		</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[1]/noise/enable"/>
			</condition>
			<property alias="/params/gen[1]/noise/_raw-amplitude"/>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/noise/output"/>
	</filter-->


<!--
	output = raw_output_lowpass.filter(0.2);
-->
	<filter>
		<enable>
			<condition>
				<property alias="/params/gen[1]/noise/enable"/>
			</condition>
		</enable>
		<type>exponential</type>
		<filter-time>
			<expression>
				<pow>
					<product>
						<value>2</value>
						<value>3.14159</value>
						<property alias="/params/gen[1]/noise/f"/>
					</product>
					<value>-1.0</value>
				</pow>
			</expression>
		</filter-time>
		<input alias="/params/gen[1]/noise/_raw-amplitude"/>
		<output alias="/params/gen[1]/noise/_amplitude"/>
	</filter>

	<filter>
		<type>gain</type>
		<!--gain>
			<property alias="/params/gen[1]/noise/level"/>
		</gain-->
		<input>
			<condition>
				<property alias="/params/gen[1]/noise/enable"/>
			</condition>
			<expression>
				<product>
					<property alias="/params/gen[1]/noise/_amplitude"/>
					<sin>
						<product>
							<value>2</value>
							<value>3.1415926</value>
							<property alias="/params/gen[1]/noise/f"/>
							<property>/sim/time/elapsed-sec</property>
						</product>
					</sin>
				</product>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/noise/output"/>
	</filter>

<!-- Noise generator 2 -->

<!--
	if (t <= 1/f) t += dt;
	else t = 0;
-->
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[2]/noise/enable"/>
			</condition>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[2]/noise/_t"/>
					<expression>
						<pow>
							<property alias="/params/gen[2]/noise/f"/>
							<value>-1</value>
						</pow>
					</expression>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[2]/noise/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[2]/noise/_t"/>
	</filter>

<!--
	if (t == 0) raw_output = rand();
-->
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[2]/noise/enable"/>
				<not>
					<property alias="/params/gen[2]/noise/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[2]/noise/_raw-amplitude"/>
	</filter>

	<!--filter>
		<type>exponential</type>
		<gain>
			<property alias="/params/gen[2]/noise/enable"/>
		</gain>
		<filter-time>
			<expression>
				<pow>
					<product>
						<value>2</value>
						<value>3.14159</value>
						<property alias="/params/gen[2]/noise/f"/>
					</product>
					<value>-1.0</value>
				</pow>
			</expression>
		</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[2]/noise/enable"/>
			</condition>
			<property alias="/params/gen[2]/noise/_raw-amplitude"/>
		</input>
		<input>0</input>
		<output alias="/params/gen[2]/noise/output"/>
	</filter-->


<!--
	output = raw_output_lowpass.filter(0.2);
-->
	<filter>
		<enable>
			<condition>
				<property alias="/params/gen[2]/noise/enable"/>
			</condition>
		</enable>
		<type>exponential</type>
		<filter-time>
			<expression>
				<pow>
					<product>
						<value>2</value>
						<value>3.14159</value>
						<property alias="/params/gen[2]/noise/f"/>
					</product>
					<value>-1.0</value>
				</pow>
			</expression>
		</filter-time>
		<input alias="/params/gen[2]/noise/_raw-amplitude"/>
		<output alias="/params/gen[2]/noise/_amplitude"/>
	</filter>

	<filter>
		<type>gain</type>
		<!--gain>
			<property alias="/params/gen[2]/noise/level"/>
		</gain-->
		<input>
			<condition>
				<property alias="/params/gen[2]/noise/enable"/>
			</condition>
			<expression>
				<product>
					<property alias="/params/gen[2]/noise/_amplitude"/>
					<sin>
						<product>
							<value>2</value>
							<value>3.1415926</value>
							<property alias="/params/gen[2]/noise/f"/>
							<property>/sim/time/elapsed-sec</property>
						</product>
					</sin>
				</product>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[2]/noise/output"/>
	</filter>




<!--
	LFO2 Generator0
-->
	<filter>
		<type>gain</type>
		<enable>
			<property alias="/params/gen[0]/lfo2/enable"/>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[0]/lfo2/_t"/>
					<property alias="/params/gen[0]/lfo2/_T"/>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[0]/lfo2/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/lfo2/_t"/>
	</filter>
	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[0]/lfo2/intensity"/>
		</gain>
		<enable>
			<condition>
				<property alias="/params/gen[0]/lfo2/enable"/>
				<not>
					<property alias="/params/gen[0]/lfo2/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[0]/lfo2/_T"/>
	</filter>
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[0]/lfo2/enable"/>
				<equals>
					<property alias="/params/gen[0]/lfo2/_t"/>
					<value>0</value>
				</equals>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
			<offset>-0.5</offset>
		</input>
		<output alias="/params/gen[0]/lfo2/raw-output"/>
	</filter>
	<filter>
		<type>exponential</type>
		<filter-time>
			<property alias="/params/gen[0]/lfo2/filter"/>
		</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[0]/lfo2/enable"/>
			</condition>
			<property alias="/params/gen[0]/lfo2/raw-output"/>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/lfo2/output"/>
	</filter>

<!--
	LFO2 Generator1
-->
	<filter>
		<type>gain</type>
		<enable>
			<property alias="/params/gen[1]/lfo2/enable"/>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[1]/lfo2/_t"/>
					<property alias="/params/gen[1]/lfo2/_T"/>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[1]/lfo2/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/lfo2/_t"/>
	</filter>
	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[1]/lfo2/intensity"/>
		</gain>
		<enable>
			<condition>
				<property alias="/params/gen[1]/lfo2/enable"/>
				<not>
					<property alias="/params/gen[1]/lfo2/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[1]/lfo2/_T"/>
	</filter>
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[1]/lfo2/enable"/>
				<equals>
					<property alias="/params/gen[1]/lfo2/_t"/>
					<value>0</value>
				</equals>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
			<offset>-0.5</offset>
		</input>
		<output alias="/params/gen[1]/lfo2/raw-output"/>
	</filter>
	<filter>
		<type>exponential</type>
		<gain>
			<property alias="/params/gen[1]/lfo2/level"/>
		</gain>
		<filter-time>
			<property alias="/params/gen[1]/lfo2/filter"/>
		</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[1]/lfo2/enable"/>
			</condition>
			<property alias="/params/gen[1]/lfo2/raw-output"/>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/lfo2/output"/>
	</filter>





<!--
	LFO1 Generator0
-->
	<filter>
		<type>gain</type>
		<enable>
			<property alias="/params/gen[0]/lfo1/enable"/>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[0]/lfo1/_t"/>
					<property alias="/params/gen[0]/lfo1/_T"/>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[0]/lfo1/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/lfo1/_t"/>
	</filter>
	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[0]/lfo1/intensity"/>
		</gain>
		<enable>
			<condition>
				<property alias="/params/gen[0]/lfo1/enable"/>
				<not>
					<property alias="/params/gen[0]/lfo1/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[0]/lfo1/_T"/>
	</filter>
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[0]/lfo1/enable"/>
				<equals>
					<property alias="/params/gen[0]/lfo1/_t"/>
					<value>0</value>
				</equals>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[0]/lfo1/raw-output"/>
	</filter>
	<filter>
		<type>exponential</type>
		<gain>3.14</gain>
		<filter-time>0.1</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[0]/lfo1/enable"/>
			</condition>
			<property alias="/params/gen[0]/lfo1/raw-output"/>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/lfo1/_phase"/>
	</filter>
	<filter>
		<type>exponential</type>
		<gain>0.5</gain>
		<filter-time>
			<property alias="/params/gen[0]/lfo1/filter"/>
		</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[0]/lfo1/enable"/>
			</condition>
			<expression>
				<sum>
					<sin>
						<product>
							<value>1.0</value>
							<value>3.14</value>
							<value>2</value>
							<property alias="/params/state/elapsed-time"/>
						</product>
					</sin>
					<sin>
						<sum>
							<product>
								<value>1.1</value>
								<value>3.14</value>
								<value>2</value>
								<property alias="/params/state/elapsed-time"/>
							</product>
							<property alias="/params/gen[0]/lfo1/_phase"/>
						</sum>
					</sin>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[0]/lfo1/output"/>
	</filter>

<!--
	LFO1 Generator1
-->
	<filter>
		<type>gain</type>
		<enable>
			<property alias="/params/gen[1]/lfo1/enable"/>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[1]/lfo1/_t"/>
					<property alias="/params/gen[1]/lfo1/_T"/>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[1]/lfo1/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/lfo1/_t"/>
	</filter>
	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[1]/lfo1/intensity"/>
		</gain>
		<enable>
			<condition>
				<property alias="/params/gen[1]/lfo1/enable"/>
				<not>
					<property alias="/params/gen[1]/lfo1/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[1]/lfo1/_T"/>
	</filter>
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[1]/lfo1/enable"/>
				<equals>
					<property alias="/params/gen[1]/lfo1/_t"/>
					<value>0</value>
				</equals>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[1]/lfo1/raw-output"/>
	</filter>
	<filter>
		<type>exponential</type>
		<gain>3.14</gain>
		<filter-time>1.0</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[1]/lfo1/enable"/>
			</condition>
			<property alias="/params/gen[1]/lfo1/raw-output"/>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/lfo1/_phase"/>
	</filter>
	<filter>
		<type>exponential</type>
		<gain>0.5</gain>
		<filter-time>
			<property alias="/params/gen[1]/lfo1/filter"/>
		</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[1]/lfo1/enable"/>
			</condition>
			<expression>
				<sum>
					<sin>
						<product>
							<value>1.0</value>
							<value>3.14</value>
							<value>2</value>
							<property alias="/params/state/elapsed-time"/>
						</product>
					</sin>
					<sin>
						<sum>
							<product>
								<value>1.1</value>
								<value>3.14</value>
								<value>2</value>
								<property alias="/params/state/elapsed-time"/>
							</product>
							<property alias="/params/gen[1]/lfo1/_phase"/>
						</sum>
					</sin>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[1]/lfo1/output"/>
	</filter>

<!--
	LFO1 Generator2
-->
	<filter>
		<type>gain</type>
		<enable>
			<property alias="/params/gen[2]/lfo1/enable"/>
		</enable>
		<input>
			<condition>
				<less-than-equals>
					<property alias="/params/gen[2]/lfo1/_t"/>
					<property alias="/params/gen[2]/lfo1/_T"/>
				</less-than-equals>
			</condition>
			<expression>
				<sum>
					<property alias="/params/state/delta-t"/>
					<property alias="/params/gen[2]/lfo1/_t"/>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[2]/lfo1/_t"/>
	</filter>
	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/gen[2]/lfo1/intensity"/>
		</gain>
		<enable>
			<condition>
				<property alias="/params/gen[2]/lfo1/enable"/>
				<not>
					<property alias="/params/gen[2]/lfo1/_t"/>
				</not>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[2]/lfo1/_T"/>
	</filter>
	<filter>
		<type>gain</type>
		<enable>
			<condition>
				<property alias="/params/gen[2]/lfo1/enable"/>
				<equals>
					<property alias="/params/gen[2]/lfo1/_t"/>
					<value>0</value>
				</equals>
			</condition>
		</enable>
		<input>
			<property alias="/params/rand"/>
		</input>
		<output alias="/params/gen[2]/lfo1/raw-output"/>
	</filter>
	<filter>
		<type>exponential</type>
		<gain>3.14</gain>
		<filter-time>1.0</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[2]/lfo1/enable"/>
			</condition>
			<property alias="/params/gen[2]/lfo1/raw-output"/>
		</input>
		<input>0</input>
		<output alias="/params/gen[2]/lfo1/_phase"/>
	</filter>
	<filter>
		<type>exponential</type>
		<gain>0.5</gain>
		<filter-time>
			<property alias="/params/gen[2]/lfo1/filter"/>
		</filter-time>
		<input>
			<condition>
				<property alias="/params/gen[2]/lfo1/enable"/>
			</condition>
			<expression>
				<sum>
					<sin>
						<product>
							<value>1.0</value>
							<value>3.14</value>
							<value>2</value>
							<property alias="/params/state/elapsed-time"/>
						</product>
					</sin>
					<sin>
						<sum>
							<product>
								<value>1.1</value>
								<value>3.14</value>
								<value>2</value>
								<property alias="/params/state/elapsed-time"/>
							</product>
							<property alias="/params/gen[2]/lfo1/_phase"/>
						</sum>
					</sin>
				</sum>
			</expression>
		</input>
		<input>0</input>
		<output alias="/params/gen[2]/lfo1/output"/>
	</filter>






	<filter>
		<type>gain</type>
		<input>
			<expression>
				<sum>
					<property alias="/params/gen[0]/sine/output"/>
					<product>
						<property alias="/params/gen[0]/resonance/output"/>
						<property alias="/params/gen[0]/resonance/level"/>
					</product>
					<product>
						<property alias="/params/gen[0]/noise/output"/>
						<property alias="/params/gen[0]/noise/level"/>
					</product>
					<product>
						<property alias="/params/gen[0]/lfo1/output"/>
						<property alias="/params/gen[0]/lfo1/level"/>
					</product>
					<product>
						<property alias="/params/gen[0]/lfo2/output"/>
						<property alias="/params/gen[0]/lfo2/level"/>
					</product>
				</sum>
			</expression>
		</input>
		<output alias="/params/gen[0]/output"/>
	</filter>

	<filter>
		<type>gain</type>
		<input>
			<expression>
				<sum>
					<property alias="/params/gen[1]/sine/output"/>
					<product>
						<property alias="/params/gen[1]/resonance/output"/>
						<property alias="/params/gen[1]/resonance/level"/>
					</product>
					<product>
						<property alias="/params/gen[1]/noise/output"/>
						<property alias="/params/gen[1]/noise/level"/>
					</product>
					<product>
						<property alias="/params/gen[1]/lfo1/output"/>
						<property alias="/params/gen[1]/lfo1/level"/>
					</product>
					<product>
						<property alias="/params/gen[1]/lfo2/output"/>
						<property alias="/params/gen[1]/lfo2/level"/>
					</product>
				</sum>
			</expression>
		</input>
		<output alias="/params/gen[1]/output"/>
	</filter>

	<filter>
		<type>gain</type>
		<input>
			<expression>
				<sum>
					<property alias="/params/gen[2]/sine/output"/>
					<product>
						<property alias="/params/gen[2]/resonance/output"/>
						<property alias="/params/gen[2]/resonance/level"/>
					</product>
					<product>
						<property alias="/params/gen[2]/noise/output"/>
						<property alias="/params/gen[2]/noise/level"/>
					</product>
					<product>
						<property alias="/params/gen[2]/lfo1/output"/>
						<property alias="/params/gen[2]/lfo1/level"/>
					</product>
					<product>
						<property alias="/params/gen[2]/lfo2/output"/>
						<property alias="/params/gen[2]/lfo2/level"/>
					</product>
				</sum>
			</expression>
		</input>
		<output alias="/params/gen[2]/output"/>
	</filter>



	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/mixer/x[3]"/>
		</gain>
		<input>
			<expression>
				<sum>
					<product>
						<property alias="/params/gen[0]/output"/>
						<property alias="/params/mixer/x[0]"/>
					</product>
					<product>
						<property alias="/params/gen[1]/output"/>
						<property alias="/params/mixer/x[1]"/>
					</product>
					<product>
						<property alias="/params/gen[2]/output"/>
						<property alias="/params/mixer/x[2]"/>
					</product>
				</sum>
			</expression>
		</input>
		<output alias="/params/mixer/x-output-raw"/>
	</filter>

	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/mixer/y[3]"/>
		</gain>
		<input>
			<expression>
				<sum>
					<product>
						<property alias="/params/gen[0]/output"/>
						<property alias="/params/mixer/y[0]"/>
					</product>
					<product>
						<property alias="/params/gen[1]/output"/>
						<property alias="/params/mixer/y[1]"/>
					</product>
					<product>
						<property alias="/params/gen[2]/output"/>
						<property alias="/params/mixer/y[2]"/>
					</product>
				</sum>
			</expression>
		</input>
		<output alias="/params/mixer/y-output-raw"/>
	</filter>

	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/mixer/z[3]"/>
		</gain>
		<input>
			<expression>
				<sum>
					<product>
						<property alias="/params/gen[0]/output"/>
						<property alias="/params/mixer/z[0]"/>
					</product>
					<product>
						<property alias="/params/gen[1]/output"/>
						<property alias="/params/mixer/z[1]"/>
					</product>
					<product>
						<property alias="/params/gen[2]/output"/>
						<property alias="/params/mixer/z[2]"/>
					</product>
				</sum>
			</expression>
		</input>
		<output alias="/params/mixer/z-output-raw"/>
	</filter>

	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/mixer/h[3]"/>
		</gain>
		<input>
			<expression>
				<sum>
					<product>
						<property alias="/params/gen[0]/output"/>
						<property alias="/params/mixer/h[0]"/>
					</product>
					<product>
						<property alias="/params/gen[1]/output"/>
						<property alias="/params/mixer/h[1]"/>
					</product>
					<product>
						<property alias="/params/gen[2]/output"/>
						<property alias="/params/mixer/h[2]"/>
					</product>
				</sum>
			</expression>
		</input>
		<output alias="/params/mixer/h-output-raw"/>
	</filter>

	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/mixer/p[3]"/>
		</gain>
		<input>
			<expression>
				<sum>
					<product>
						<property alias="/params/gen[0]/output"/>
						<property alias="/params/mixer/p[0]"/>
					</product>
					<product>
						<property alias="/params/gen[1]/output"/>
						<property alias="/params/mixer/p[1]"/>
					</product>
					<product>
						<property alias="/params/gen[2]/output"/>
						<property alias="/params/mixer/p[2]"/>
					</product>
				</sum>
			</expression>
		</input>
		<output alias="/params/mixer/p-output-raw"/>
	</filter>

	<filter>
		<type>gain</type>
		<gain>
			<property alias="/params/mixer/r[3]"/>
		</gain>
		<input>
			<expression>
				<sum>
					<product>
						<property alias="/params/gen[0]/output"/>
						<property alias="/params/mixer/r[0]"/>
					</product>
					<product>
						<property alias="/params/gen[1]/output"/>
						<property alias="/params/mixer/r[1]"/>
					</product>
					<product>
						<property alias="/params/gen[2]/output"/>
						<property alias="/params/mixer/r[2]"/>
					</product>
				</sum>
			</expression>
		</input>
		<output alias="/params/mixer/r-output-raw"/>
	</filter>




	<filter include="gain_lookup-air.xml"/>
	<filter include="filter_lookup-air.xml"/>


	<filter>
		<type>exponential</type>
		<filter-time>
			<property alias="/params/_filter"/>
		</filter-time>
		<gain>
			<property alias="/params/_gain"/>
		</gain>
		<input alias="/params/mixer/x-output-raw"/>
		<output alias="/params/mixer/x-output"/>
	</filter>
	<filter>
		<type>exponential</type>
		<filter-time>
			<property alias="/params/_filter"/>
		</filter-time>
		<gain>
			<property alias="/params/_gain"/>
		</gain>
		<input alias="/params/mixer/y-output-raw"/>
		<output alias="/params/mixer/y-output"/>
	</filter>
	<filter>
		<type>exponential</type>
		<filter-time>
			<property alias="/params/_filter"/>
		</filter-time>
		<gain>
			<property alias="/params/_gain"/>
		</gain>
		<input alias="/params/mixer/z-output-raw"/>
		<output alias="/params/mixer/z-output"/>
	</filter>
	<filter>
		<type>exponential</type>
		<filter-time>
			<property alias="/params/_filter"/>
		</filter-time>
		<gain>
			<property alias="/params/_gain"/>
			<scale>10</scale>
		</gain>
		<input alias="/params/mixer/h-output-raw"/>
		<output alias="/params/mixer/h-output"/>
	</filter>
	<filter>
		<type>exponential</type>
		<filter-time>
			<property alias="/params/_filter"/>
		</filter-time>
		<gain>
			<property alias="/params/_gain"/>
			<scale>10</scale>
		</gain>
		<input alias="/params/mixer/p-output-raw"/>
		<output alias="/params/mixer/p-output"/>
	</filter>
	<filter>
		<type>exponential</type>
		<filter-time>
			<property alias="/params/_filter"/>
		</filter-time>
		<gain>
			<property alias="/params/_gain"/>
			<scale>10</scale>
		</gain>
		<input alias="/params/mixer/r-output-raw"/>
		<output alias="/params/mixer/r-output"/>
	</filter>

</PropertyList>